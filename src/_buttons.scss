$radiuses: 4px, 8px, 15px, 18px, 24px, 28px, 50%, unset;
$colors: (
  "primary",
  "secondary",
  "success",
  "danger",
  "info",
  "warning",
  "dark",
  "light",
  "blue",
  "blue-2",
  "green",
  "green-2",
  "red",
  "red-2",
  "pink",
  "pink-2",
  "orange",
  "orange-2",
  "yellow",
  "yellow-2"
);

@mixin pre-radius($radius: 4px, $index: "", $prefix: "", $imp: null) {
  &-rounded#{$prefix}#{$index}#{$imp},
  &-rounded#{$prefix}-t#{$index}#{$imp},
  &-rounded#{$prefix}-r#{$index}#{$imp},
  &-rounded#{$prefix}-tr#{$index}#{$imp} {
    @if $imp {
      border-top-right-radius: #{$radius} !important;
    } @else {
      border-top-right-radius: $radius;
    }
  }

  &-rounded#{$prefix}#{$index}#{$imp},
  &-rounded#{$prefix}-t#{$index}#{$imp},
  &-rounded#{$prefix}-l#{$index}#{$imp},
  &-rounded#{$prefix}-tl#{$index}#{$imp} {
    @if $imp {
      border-top-left-radius: #{$radius} !important;
    } @else {
      border-top-left-radius: $radius;
    }
  }

  &-rounded#{$prefix}#{$index}#{$imp},
  &-rounded#{$prefix}-b#{$index}#{$imp},
  &-rounded#{$prefix}-r#{$index}#{$imp},
  &-rounded#{$prefix}-br#{$index}#{$imp} {
    @if $imp {
      border-bottom-right-radius: #{$radius} !important;
    } @else {
      border-bottom-right-radius: $radius;
    }
  }

  &-rounded#{$prefix}#{$index}#{$imp},
  &-rounded#{$prefix}-b#{$index}#{$imp},
  &-rounded#{$prefix}-l#{$index}#{$imp},
  &-rounded#{$prefix}-bl#{$index}#{$imp} {
    @if $imp {
      border-bottom-left-radius: #{$radius} !important;
    } @else {
      border-bottom-left-radius: $radius;
    }
  }
}

@mixin make-radius($prefix: "", $imp: null) {
  $i: 0;
  @each $radius in $radiuses {
    $i: $i + 1;
    $index: $i;
    @if $i == 1 {
      $index: "";
    } @else {
      $index: "-" + $i;
    }

    @if $radius == 50% {
      $index: "-full";
    }

    @if $radius == unset {
      $index: "-unset";
    }
    .tf-btn {
      @include pre-radius($radius, $index, $prefix, $imp);
    }
  }
}

/**
  * Generate CSS Buttons
  * Loop through $colors to generate classes
  * Classes will be usable like .tf-btn-{$color}
  * Example: <div class"tf-btn"></div>
  *
  * Generated class would look like:
  * .tf-btn {
  *    font-size: 15px;
  *    font-family: Arial;
  *    width: auto;
  *    height: auto;
  *    color: #fff;
  *    font-weight: bold;
  *    background-color: var(--tf-light);
  * }
  */
.tf {
  &-btn {
    font-size: 15px;
    font-family: Arial;
    width: auto;
    height: auto;
    color: #fff;
    font-weight: bold;
    border: none;
    cursor: pointer;
    background-color: var(--tf-light);

    &:hover {
      background-color: lighten($tf-light, 7%) !important;
    }

    &-block {
      width: 100% !important;
    }
  }
}

/**
  * Generate CSS Button Colors
  * Loop through $colors to generate classes
  * Classes will be usable like .tf-btn-{$color}
  * Example: <div class"tf-btn-primary"></div>
  *
  * Generated class would look like:
  * .tf-btn-primary {
  *    font-size: 15px;
  *    font-family: Arial;
  *    width: auto;
  *    height: auto;
  *    color: #fff;
  *    font-weight: bold;
  * }
  */
.tf {
  &-btn {
    @each $color in $colors {
      &-#{$color} {
        background-color: var(--tf-#{$color}) !important;
      }
      &-#{$color}:hover {
        $get-color: map-get($color-map, $color);
        // @debug $color, $get-color;
        @if $get-color != null {
          background-color: lighten($get-color, 7%) !important;
        }
      }
    }
  }
}

/**
* ==================================
* ==================================
*
* Utilities for Borders
*/
@include make-radius($prefix: "");
@include make-radius($prefix: "", $imp: ".tf-important");

/**
* ==================================
* ==================================
*
* Utilities for Button Borders on Extra Large Screen
*
*/
@include large-screen("min-width") {
  @include make-radius($prefix: "-xl");
  @include make-radius($prefix: "-lx", $imp: ".tf-important");
}

/**
* ==================================
* ==================================
*
* Utilities for Button Borders on Large Screen
*
*/
@include desktop-up("min-width") {
  @include make-radius($prefix: "-lg");
  @include make-radius($prefix: "-lg", $imp: ".tf-important");
}

/**
* ==================================
* ==================================
*
* Utilities for Button Borders on Tablets Screens
*
*/
@include tablet-up("min-width") {
  @include make-radius($prefix: "-md");
  @include make-radius($prefix: "-md", $imp: ".tf-important");
}

/**
* ==================================
* ==================================
*
* Utilities for Button Borders on Mobile Screen
*
*/
@include mobile-up("min-width") {
  @include make-radius($prefix: "-sm");
  @include make-radius($prefix: "-sm", $imp: ".tf-important");
}

/**
* ==================================
* ==================================
*
* Utilities for Button Borders on Tiny Screens
*
*/
@include tiny-screen("min-width") {
  @include make-radius($prefix: "-xs");
  @include make-radius($prefix: "-xs", $imp: ".tf-important");
}
